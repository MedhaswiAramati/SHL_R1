import os
import google.generativeai as genai
from dotenv import load_dotenv

# Load environment variables from a .env file
load_dotenv()

# Configure the Gemini API client with the API key from environment variables
genai.configure(api_key=os.getenv("GAIzaSyBIXhp0hS8EqqFTD301_17VADbMcFHB7DA"))

def summarize_recommendations(results):
    """
    Summarizes the given recommendations using the Gemini API.

    Args:
        results (list): A list of tuples containing recommendation details.

    Returns:
        str: A summary generated by the Gemini API.
    """
    if not results:
        return "No relevant assessments found."

    # Construct the prompt for the Gemini API
    text = "\n".join([f"Title: {title}\nDescription: {desc}" for title, desc, _ in results])
    prompt = f"Summarize and recommend the most suitable assessments based on the following:\n\n{text}"

    # Generate content using the Gemini API
    model = genai.GenerativeModel("gemini-pro")
    response = model.generate_content(prompt)
    return response.text
